Intent
Define an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.
Design an intermediary to decouple many peers.
Promote the many-to-many relationships between interacting peers to "full object status".


In Unix, permission to access system resources is managed at three levels of granularity: world, group, and owner. A group is a collection of users intended to model some functional affiliation.
Each user on the system can be a member of one or more groups,
and each group can have zero or more users assigned to it. Next figure shows three users that are assigned to all three groups.

If we were to model this in software, we could decide to have User objects coupled to Group objects, and Group objects coupled to User objects. Then when changes occur, both classes and all their instances would be affected.

An alternate approach would be to introduce "an additional level of indirection" - take the mapping of users to groups and groups to users, and make it an abstraction unto itself.
This offers several advantages: Users and Groups are decoupled from one another,
many mappings can easily be maintained and manipulated simultaneously, and the mapping abstraction can be extended in the future by defining derived classes.



Applicability:
According to Gamma et al, the Mediator pattern should be used when:
-a set of objects communicate in well-defined but complex ways. The resulting interdependencies are unstructured and difficult to understand.
-reusing an object is difficult because it refers to and communicates with many other objects.
-a behavior that's distributed between several classes should be customizable without a lot of subclassing.


The mediator object: encapsulates all interconnections, acts as the hub of communication,
is responsible for controlling and coordinating the interactions of its clients, and promotes loose coupling by keeping objects from referring to each other explicitly.

http://www.oodesign.com/mediator-pattern.html
https://sourcemaking.com/design_patterns/mediator